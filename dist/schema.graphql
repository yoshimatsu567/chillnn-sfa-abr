scalar AWSDate

scalar AWSDateTime

scalar AWSEmail

scalar AWSIPAddress

scalar AWSJSON

scalar AWSPhone

scalar AWSTime

scalar AWSTimestamp

scalar AWSURL

type ClientMast {
  clientID: ID!

  """営業側の担当者名"""
  chargeUserID: ID

  """会社名"""
  companyName: String

  """施設名"""
  accommodationName: String!

  """顧客の担当者名"""
  clientUserName: String

  """予想流通額"""
  expectedSalesAmount: String

  """施設所在地"""
  prefecture: String

  """HPのポテンシャル"""
  homePagePotential: String

  """メールアドレス"""
  clientEmail: String!

  """電話番号"""
  clientPhoneNumber: String

  """所要時間"""
  requiredTime: String

  """Phaseの状態、だけど検討の余地あり"""
  phaseStatus: Int

  """Appointmentの状態、だけど検討の余地あり"""
  appointmentStatus: String

  """過去ステータス"""
  pastStatus: String

  """新規ステータス"""
  newStatus: String

  """status"""
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
  deletedAt: AWSTimestamp
}

input ClientMastInput {
  clientID: ID!
  chargeUserID: ID
  companyName: String
  accommodationName: String!
  clientUserName: String
  expectedSalesAmount: String
  prefecture: String
  homePagePotential: String
  clientEmail: String!
  clientPhoneNumber: String
  requiredTime: String
  phaseStatus: Int
  appointmentStatus: String
  pastStatus: String
  newStatus: String

  """status"""
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
  deletedAt: AWSTimestamp
}

enum ErrorCode {
  chillnnSFAError_401_notSignIn
  chillnnSFAError_404_resourceNotFound
  chillnnSFAError_500_systemError
}

type EventMast {
  eventID: ID!
  clientID: ID
  eventNumber: Int!

  """このEventの編集者"""
  editedUserID: ID

  """Eventの名前"""
  eventDetail: String!

  """Eventのステータス、コンタクトとアクションのメモを想定、1st,2nd,3rd..."""
  eventStatus: String!

  """Eventのメモ内容"""
  eventMemo: String

  """Eventの所属する期間、いる？"""
  eventTerm: String

  """Eventの実施日"""
  eventDate: String

  """status"""
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
  deletedAt: AWSTimestamp
}

input EventMastInput {
  eventID: ID!
  clientID: ID
  eventNumber: Int!
  editedUserID: ID
  eventDetail: String!
  eventStatus: String!
  eventMemo: String
  eventTerm: String
  eventDate: String

  """status"""
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
  deletedAt: AWSTimestamp
}

enum PHASE_STATUS {
  """Phaseを見分ける用の Enum ,ステータス"""
  TITLE
  DATA
  DEAD
}

type PhaseMast {
  phaseID: ID!

  """Phaseを所有するClientのID"""
  clientID: ID

  """Phase的に何番目のPhaseなのか"""
  phaseNumber: Int!

  """そのPhaseを編集した人のID"""
  editedUserID: ID

  """Phaseの名前、詳細"""
  phaseDetail: String!

  """Phaseを見分ける用の Enum ,ステータス"""
  phaseStatus: PHASE_STATUS!

  """そのPhaseが所属する期間を入れる想定"""
  phaseTerm: String

  """そのPhaseに移った日、想定"""
  phaseDate: String

  """status"""
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
  deletedAt: AWSTimestamp
}

input PhaseMastInput {
  phaseID: ID!
  clientID: ID
  phaseNumber: Int!
  editedUserID: ID
  phaseDetail: String!
  phaseStatus: PHASE_STATUS!
  phaseTerm: String
  phaseDate: String

  """status"""
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
  deletedAt: AWSTimestamp
}

type UserMast {
  userID: ID!
  name: String!
  email: String!
  phoneNumber: String
  jobTitleName: String
  userStatus: String!

  """status"""
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
  deletedAt: AWSTimestamp
}

input UserMastInput {
  userID: ID!
  name: String!
  email: String!
  phoneNumber: String
  jobTitleName: String
  userStatus: String!

  """status"""
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp!
  deletedAt: AWSTimestamp
}
